// <auto-generated />
using System;
using ApiTreinamento.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiTreinamento.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220527193814_Compra")]
    partial class Compra
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApiTreinamento.Domain.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ApiTreinamento.Domain.Compra", b =>
                {
                    b.Property<int>("CompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(12,2)");

                    b.Property<float>("Quantidade")
                        .HasColumnType("float");

                    b.HasKey("CompraId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("ApiTreinamento.Domain.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("CompraId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<float>("Estoque")
                        .HasColumnType("float");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(140)
                        .HasColumnType("varchar(140)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ProdutoId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CompraId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("ApiTreinamento.Domain.Promocao", b =>
                {
                    b.Property<int>("PromocaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataTermino")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.HasKey("PromocaoId");

                    b.ToTable("Promocoes");
                });

            modelBuilder.Entity("ProdutoPromocao", b =>
                {
                    b.Property<int>("ProdutosProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("PromocoesPromocaoId")
                        .HasColumnType("int");

                    b.HasKey("ProdutosProdutoId", "PromocoesPromocaoId");

                    b.HasIndex("PromocoesPromocaoId");

                    b.ToTable("ProdutoPromocao");
                });

            modelBuilder.Entity("ApiTreinamento.Domain.Produto", b =>
                {
                    b.HasOne("ApiTreinamento.Domain.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiTreinamento.Domain.Compra", null)
                        .WithMany("Produtos")
                        .HasForeignKey("CompraId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("ProdutoPromocao", b =>
                {
                    b.HasOne("ApiTreinamento.Domain.Produto", null)
                        .WithMany()
                        .HasForeignKey("ProdutosProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiTreinamento.Domain.Promocao", null)
                        .WithMany()
                        .HasForeignKey("PromocoesPromocaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiTreinamento.Domain.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("ApiTreinamento.Domain.Compra", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
